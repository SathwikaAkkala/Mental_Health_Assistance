{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\empathy_websi\\\\empathy-friend-website\\\\src\\\\pages\\\\Chatbotpage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Chatbotpage.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbotpage() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const handleSend = () => {\n    if (input.trim() === '') return;\n    const newMessages = [...messages, {\n      text: input,\n      type: 'user'\n    }];\n    setMessages(newMessages);\n    setInput('');\n\n    // Show typing animation\n    setIsTyping(true);\n\n    // Simulate bot thinking\n    setTimeout(() => {\n      const botReply = {\n        text: generateBotReply(input),\n        type: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botReply]);\n      setIsTyping(false);\n    }, 1500); // 1.5 seconds typing delay\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // Simple emotional response system\n  const generateBotReply = userInput => {\n    const lowerInput = userInput.toLowerCase();\n    if (lowerInput.includes('sad') || lowerInput.includes('depressed')) {\n      return \"I'm really sorry to hear that. Remember, tough times don't last forever â€” you're stronger than you think. ðŸŒŸ\";\n    } else if (lowerInput.includes('happy') || lowerInput.includes('good')) {\n      return \"That's wonderful! I'm happy to hear you're feeling good. Keep shining! âœ¨\";\n    } else if (lowerInput.includes('angry') || lowerInput.includes('frustrated')) {\n      return \"It's okay to feel angry sometimes. Try taking deep breaths and give yourself some space. I'm here for you. ðŸ’›\";\n    } else if (lowerInput.includes('anxious') || lowerInput.includes('worried')) {\n      return \"Anxiety can be tough. Try grounding techniques like focusing on your breath or surroundings. You've got this. ðŸŒˆ\";\n    } else if (lowerInput.includes('lonely') || lowerInput.includes('alone')) {\n      return \"You are not alone. I'm here to listen. And remember, there are people who care about you deeply. ðŸ¤—\";\n    } else {\n      return \"Thank you for sharing. I'm always here to listen and support you. ðŸ’¬ How else are you feeling today?\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-cover bg-center p-8\",\n    style: {\n      backgroundImage: \"url('/images/chatbot-bg.jpg')\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold mb-6 text-white drop-shadow-lg\",\n      children: \"AI-Powered Emotional Friend \\uD83E\\uDD17\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl h-[600px] overflow-y-auto border border-white rounded-lg \\r bg-white bg-opacity-30 backdrop-blur-md p-6 mb-6 shadow-xl\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-3 my-3 rounded-lg text-lg ${msg.type === 'user' ? 'bg-purple-200 text-right' : 'bg-green-200 text-left'}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 my-3 rounded-lg bg-green-200 text-left animate-pulse text-lg\",\n        children: \"Typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full max-w-4xl space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Share how you're feeling...\",\n        className: \"flex-grow px-5 py-3 border border-gray-300 rounded-lg text-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"bg-purple-700 text-white px-6 py-3 rounded-lg text-lg font-semibold hover:bg-purple-800\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbotpage, \"GIm8bEhSd+QxLCq5fkptu2//Ia4=\");\n_c = Chatbotpage;\nexport default Chatbotpage;\nvar _c;\n$RefreshReg$(_c, \"Chatbotpage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbotpage","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","handleSend","trim","newMessages","text","type","setTimeout","botReply","generateBotReply","prevMessages","handleKeyDown","e","key","preventDefault","userInput","lowerInput","toLowerCase","includes","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/empathy_websi/empathy-friend-website/src/pages/Chatbotpage.jsx"],"sourcesContent":["// src/pages/Chatbotpage.jsx\r\nimport React, { useState } from 'react';\r\n\r\nfunction Chatbotpage() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const handleSend = () => {\r\n    if (input.trim() === '') return;\r\n\r\n    const newMessages = [...messages, { text: input, type: 'user' }];\r\n    setMessages(newMessages);\r\n    setInput('');\r\n\r\n    // Show typing animation\r\n    setIsTyping(true);\r\n\r\n    // Simulate bot thinking\r\n    setTimeout(() => {\r\n      const botReply = {\r\n        text: generateBotReply(input),\r\n        type: 'bot',\r\n      };\r\n\r\n      setMessages((prevMessages) => [...prevMessages, botReply]);\r\n      setIsTyping(false);\r\n    }, 1500); // 1.5 seconds typing delay\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  // Simple emotional response system\r\n  const generateBotReply = (userInput) => {\r\n    const lowerInput = userInput.toLowerCase();\r\n\r\n    if (lowerInput.includes('sad') || lowerInput.includes('depressed')) {\r\n      return \"I'm really sorry to hear that. Remember, tough times don't last forever â€” you're stronger than you think. ðŸŒŸ\";\r\n    } else if (lowerInput.includes('happy') || lowerInput.includes('good')) {\r\n      return \"That's wonderful! I'm happy to hear you're feeling good. Keep shining! âœ¨\";\r\n    } else if (lowerInput.includes('angry') || lowerInput.includes('frustrated')) {\r\n      return \"It's okay to feel angry sometimes. Try taking deep breaths and give yourself some space. I'm here for you. ðŸ’›\";\r\n    } else if (lowerInput.includes('anxious') || lowerInput.includes('worried')) {\r\n      return \"Anxiety can be tough. Try grounding techniques like focusing on your breath or surroundings. You've got this. ðŸŒˆ\";\r\n    } else if (lowerInput.includes('lonely') || lowerInput.includes('alone')) {\r\n      return \"You are not alone. I'm here to listen. And remember, there are people who care about you deeply. ðŸ¤—\";\r\n    } else {\r\n      return \"Thank you for sharing. I'm always here to listen and support you. ðŸ’¬ How else are you feeling today?\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen flex flex-col items-center justify-center bg-cover bg-center p-8\"\r\n      style={{ backgroundImage: \"url('/images/chatbot-bg.jpg')\" }}\r\n    >\r\n      <h2 className=\"text-4xl font-bold mb-6 text-white drop-shadow-lg\">AI-Powered Emotional Friend ðŸ¤—</h2>\r\n\r\n      {/* Chatbox */}\r\n      <div\r\n        className=\"w-full max-w-4xl h-[600px] overflow-y-auto border border-white rounded-lg \r\n                   bg-white bg-opacity-30 backdrop-blur-md p-6 mb-6 shadow-xl\"\r\n      >\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`p-3 my-3 rounded-lg text-lg ${\r\n              msg.type === 'user'\r\n                ? 'bg-purple-200 text-right'\r\n                : 'bg-green-200 text-left'\r\n            }`}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n\r\n        {/* Typing animation */}\r\n        {isTyping && (\r\n          <div className=\"p-3 my-3 rounded-lg bg-green-200 text-left animate-pulse text-lg\">\r\n            Typing...\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input */}\r\n      <div className=\"flex w-full max-w-4xl space-x-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          placeholder=\"Share how you're feeling...\"\r\n          className=\"flex-grow px-5 py-3 border border-gray-300 rounded-lg text-lg\"\r\n        />\r\n        <button\r\n          onClick={handleSend}\r\n          className=\"bg-purple-700 text-white px-6 py-3 rounded-lg text-lg font-semibold hover:bg-purple-800\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbotpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}