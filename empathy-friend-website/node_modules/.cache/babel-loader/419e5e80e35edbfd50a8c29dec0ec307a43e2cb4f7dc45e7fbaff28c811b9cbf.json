{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\empathy_websi\\\\empathy-friend-website\\\\src\\\\components\\\\MoodSetter.jsx\",\n  _s = $RefreshSig$();\n// src/components/MoodSetter.jsx\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodSetter({\n  messages\n}) {\n  _s();\n  const [mood, setMood] = useState('neutral');\n  const [tips, setTips] = useState('');\n  useEffect(() => {\n    if (!messages || messages.length === 0) return;\n\n    // Simple keyword-based mood detection from user messages\n    const userMessages = messages.filter(msg => msg.type === 'user').map(msg => msg.text.toLowerCase());\n    let score = 0; // positive >0, negative <0\n\n    userMessages.forEach(msg => {\n      if (msg.includes('sad') || msg.includes('depressed') || msg.includes('lonely') || msg.includes('angry') || msg.includes('anxious')) {\n        score -= 1;\n      }\n      if (msg.includes('happy') || msg.includes('good') || msg.includes('great') || msg.includes('joy') || msg.includes('excited')) {\n        score += 1;\n      }\n    });\n    if (score > 0) {\n      setMood('positive');\n      setTips(\"Keep up the great vibes! Remember to share your happiness with others ðŸ˜Š.\");\n    } else if (score < 0) {\n      setMood('negative');\n      setTips(\"It's okay to have tough days. Try some breathing exercises or reach out to a friend ðŸ¤—.\");\n    } else {\n      setMood('neutral');\n      setTips(\"Keep checking in with yourself. Your feelings matter ðŸŒŸ.\");\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 p-6 bg-white bg-opacity-70 rounded-lg shadow-lg max-w-xl text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: [\"Your Current Mood: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: mood === 'positive' ? 'text-green-600' : mood === 'negative' ? 'text-red-600' : 'text-gray-700',\n        children: mood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: tips\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(MoodSetter, \"yNF+7UgHgYvYYeE8+ak59nazD+o=\");\n_c = MoodSetter;\nexport default MoodSetter;\nvar _c;\n$RefreshReg$(_c, \"MoodSetter\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MoodSetter","messages","_s","mood","setMood","tips","setTips","length","userMessages","filter","msg","type","map","text","toLowerCase","score","forEach","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/empathy_websi/empathy-friend-website/src/components/MoodSetter.jsx"],"sourcesContent":["// src/components/MoodSetter.jsx\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction MoodSetter({ messages }) {\r\n  const [mood, setMood] = useState('neutral');\r\n  const [tips, setTips] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!messages || messages.length === 0) return;\r\n\r\n    // Simple keyword-based mood detection from user messages\r\n    const userMessages = messages.filter(msg => msg.type === 'user').map(msg => msg.text.toLowerCase());\r\n\r\n    let score = 0; // positive >0, negative <0\r\n\r\n    userMessages.forEach((msg) => {\r\n      if (msg.includes('sad') || msg.includes('depressed') || msg.includes('lonely') || msg.includes('angry') || msg.includes('anxious')) {\r\n        score -= 1;\r\n      } \r\n      if (msg.includes('happy') || msg.includes('good') || msg.includes('great') || msg.includes('joy') || msg.includes('excited')) {\r\n        score += 1;\r\n      }\r\n    });\r\n\r\n    if (score > 0) {\r\n      setMood('positive');\r\n      setTips(\"Keep up the great vibes! Remember to share your happiness with others ðŸ˜Š.\");\r\n    } else if (score < 0) {\r\n      setMood('negative');\r\n      setTips(\"It's okay to have tough days. Try some breathing exercises or reach out to a friend ðŸ¤—.\");\r\n    } else {\r\n      setMood('neutral');\r\n      setTips(\"Keep checking in with yourself. Your feelings matter ðŸŒŸ.\");\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"mt-8 p-6 bg-white bg-opacity-70 rounded-lg shadow-lg max-w-xl text-center\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Your Current Mood: <span className={mood === 'positive' ? 'text-green-600' : mood === 'negative' ? 'text-red-600' : 'text-gray-700'}>{mood}</span></h2>\r\n      <p className=\"text-lg\">{tips}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoodSetter;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,QAAQ,IAAIA,QAAQ,CAACM,MAAM,KAAK,CAAC,EAAE;;IAExC;IACA,MAAMC,YAAY,GAAGP,QAAQ,CAACQ,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,KAAK,MAAM,CAAC,CAACC,GAAG,CAACF,GAAG,IAAIA,GAAG,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;IAEnG,IAAIC,KAAK,GAAG,CAAC,CAAC,CAAC;;IAEfP,YAAY,CAACQ,OAAO,CAAEN,GAAG,IAAK;MAC5B,IAAIA,GAAG,CAACO,QAAQ,CAAC,KAAK,CAAC,IAAIP,GAAG,CAACO,QAAQ,CAAC,WAAW,CAAC,IAAIP,GAAG,CAACO,QAAQ,CAAC,QAAQ,CAAC,IAAIP,GAAG,CAACO,QAAQ,CAAC,OAAO,CAAC,IAAIP,GAAG,CAACO,QAAQ,CAAC,SAAS,CAAC,EAAE;QAClIF,KAAK,IAAI,CAAC;MACZ;MACA,IAAIL,GAAG,CAACO,QAAQ,CAAC,OAAO,CAAC,IAAIP,GAAG,CAACO,QAAQ,CAAC,MAAM,CAAC,IAAIP,GAAG,CAACO,QAAQ,CAAC,OAAO,CAAC,IAAIP,GAAG,CAACO,QAAQ,CAAC,KAAK,CAAC,IAAIP,GAAG,CAACO,QAAQ,CAAC,SAAS,CAAC,EAAE;QAC5HF,KAAK,IAAI,CAAC;MACZ;IACF,CAAC,CAAC;IAEF,IAAIA,KAAK,GAAG,CAAC,EAAE;MACbX,OAAO,CAAC,UAAU,CAAC;MACnBE,OAAO,CAAC,2EAA2E,CAAC;IACtF,CAAC,MAAM,IAAIS,KAAK,GAAG,CAAC,EAAE;MACpBX,OAAO,CAAC,UAAU,CAAC;MACnBE,OAAO,CAAC,yFAAyF,CAAC;IACpG,CAAC,MAAM;MACLF,OAAO,CAAC,SAAS,CAAC;MAClBE,OAAO,CAAC,0DAA0D,CAAC;IACrE;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACEF,OAAA;IAAKmB,SAAS,EAAC,2EAA2E;IAAAC,QAAA,gBACxFpB,OAAA;MAAImB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,GAAC,qBAAmB,eAAApB,OAAA;QAAMmB,SAAS,EAAEf,IAAI,KAAK,UAAU,GAAG,gBAAgB,GAAGA,IAAI,KAAK,UAAU,GAAG,cAAc,GAAG,eAAgB;QAAAgB,QAAA,EAAEhB;MAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnMxB,OAAA;MAAGmB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEd;IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAACrB,EAAA,CAvCQF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAyCnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}