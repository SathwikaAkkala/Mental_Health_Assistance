{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\empathy_websi\\\\empathy-friend-website\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Login.jsx\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const email = e.target.email.value;\n\n    // Dummy login check\n    if (email.endsWith('@gmail.com')) {\n      setSuccess(true);\n      setError('');\n\n      // After 2 sec → hide popup and redirect to chatbot\n      setTimeout(() => {\n        setSuccess(false);\n        navigate('/chatbot');\n      }, 2000);\n    } else {\n      setError('Only registered emails allowed. Please register first!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center min-h-screen bg-cover bg-center\",\n    style: {\n      backgroundImage: \"url('/images/login-bg.jpg')\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-8 rounded shadow-md space-y-4 w-96 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        className: \"p-2 border w-full\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"p-2 border w-full\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-purple-600 text-white p-2 rounded hover:bg-purple-700 transition-transform transform hover:scale-105\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-2 left-1/2 transform -translate-x-1/2 bg-green-500 text-white px-4 py-2 rounded shadow animate-bounce\",\n        children: \"\\u2705 Login Successful! Redirecting to Chatbot...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-3 bg-red-500 text-white rounded text-center animate-pulse\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"yHEzMSSJ+l+R3eQdEcUv5nHV4Rs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","success","setSuccess","error","setError","navigate","handleSubmit","e","preventDefault","email","target","value","endsWith","setTimeout","className","style","backgroundImage","children","onSubmit","name","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/empathy_websi/empathy-friend-website/src/pages/Login.jsx"],"sourcesContent":["// src/pages/Login.jsx\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const email = e.target.email.value;\r\n\r\n    // Dummy login check\r\n    if (email.endsWith('@gmail.com')) {\r\n      setSuccess(true);\r\n      setError('');\r\n\r\n      // After 2 sec → hide popup and redirect to chatbot\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n        navigate('/chatbot');\r\n      }, 2000);\r\n    } else {\r\n      setError('Only registered emails allowed. Please register first!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"flex justify-center items-center min-h-screen bg-cover bg-center\"\r\n      style={{ backgroundImage: \"url('/images/login-bg.jpg')\" }}\r\n    >\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"bg-white p-8 rounded shadow-md space-y-4 w-96 relative\"\r\n      >\r\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" className=\"p-2 border w-full\" required />\r\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" className=\"p-2 border w-full\" required />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-purple-600 text-white p-2 rounded hover:bg-purple-700 transition-transform transform hover:scale-105\"\r\n        >\r\n          Login\r\n        </button>\r\n\r\n        {/* Success Popup */}\r\n        {success && (\r\n          <div className=\"absolute top-2 left-1/2 transform -translate-x-1/2 bg-green-500 text-white px-4 py-2 rounded shadow animate-bounce\">\r\n            ✅ Login Successful! Redirecting to Chatbot...\r\n          </div>\r\n        )}\r\n\r\n        {/* Error */}\r\n        {error && (\r\n          <div className=\"mt-4 p-3 bg-red-500 text-white rounded text-center animate-pulse\">\r\n            {error}\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK,CAACE,KAAK;;IAElC;IACA,IAAIF,KAAK,CAACG,QAAQ,CAAC,YAAY,CAAC,EAAE;MAChCV,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;;MAEZ;MACAS,UAAU,CAAC,MAAM;QACfX,UAAU,CAAC,KAAK,CAAC;QACjBG,QAAQ,CAAC,UAAU,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLD,QAAQ,CAAC,wDAAwD,CAAC;IACpE;EACF,CAAC;EAED,oBACEN,OAAA;IACEgB,SAAS,EAAC,kEAAkE;IAC5EC,KAAK,EAAE;MAAEC,eAAe,EAAE;IAA8B,CAAE;IAAAC,QAAA,eAE1DnB,OAAA;MACEoB,QAAQ,EAAEZ,YAAa;MACvBQ,SAAS,EAAC,wDAAwD;MAAAG,QAAA,gBAElEnB,OAAA;QAAOqB,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC,OAAO;QAACC,WAAW,EAAC,OAAO;QAACP,SAAS,EAAC,mBAAmB;QAACQ,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9F5B,OAAA;QAAOqB,IAAI,EAAC,UAAU;QAACC,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACP,SAAS,EAAC,mBAAmB;QAACQ,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvG5B,OAAA;QACEsB,IAAI,EAAC,QAAQ;QACbN,SAAS,EAAC,gHAAgH;QAAAG,QAAA,EAC3H;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAGRzB,OAAO,iBACNH,OAAA;QAAKgB,SAAS,EAAC,oHAAoH;QAAAG,QAAA,EAAC;MAEpI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,EAGAvB,KAAK,iBACJL,OAAA;QAAKgB,SAAS,EAAC,kEAAkE;QAAAG,QAAA,EAC9Ed;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1B,EAAA,CA1DQD,KAAK;EAAA,QAGKH,WAAW;AAAA;AAAA+B,EAAA,GAHrB5B,KAAK;AA4Dd,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}